#ifndef _ALTERA_ADDRESS_BASES_H_
#define _ALTERA_ADDRESS_BASES_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'VideoBox' in
 * file 'VideoBox.sopcinfo'.
 */

/*
 * This file contains macros for module 'hps' and devices
 * connected to the following masters:
 *   h2f_axi_master
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'sdram_controller', class 'altera_avalon_new_sdram_controller'
 * The macros are prefixed with 'SDRAM_CONTROLLER_'.
 * The prefix is the slave descriptor.
 */
#define SDRAM_CONTROLLER_COMPONENT_TYPE altera_avalon_new_sdram_controller
#define SDRAM_CONTROLLER_COMPONENT_NAME sdram_controller
#define SDRAM_CONTROLLER_BASE 0x0
#define SDRAM_CONTROLLER_SPAN 67108864
#define SDRAM_CONTROLLER_END 0x3ffffff
#define SDRAM_CONTROLLER_CAS_LATENCY 3
#define SDRAM_CONTROLLER_CONTENTS_INFO 
#define SDRAM_CONTROLLER_INIT_NOP_DELAY 0.0
#define SDRAM_CONTROLLER_INIT_REFRESH_COMMANDS 2
#define SDRAM_CONTROLLER_IS_INITIALIZED 1
#define SDRAM_CONTROLLER_POWERUP_DELAY 100.0
#define SDRAM_CONTROLLER_REFRESH_PERIOD 7.8125
#define SDRAM_CONTROLLER_REGISTER_DATA_IN 1
#define SDRAM_CONTROLLER_SDRAM_ADDR_WIDTH 25
#define SDRAM_CONTROLLER_SDRAM_BANK_WIDTH 2
#define SDRAM_CONTROLLER_SDRAM_COL_WIDTH 10
#define SDRAM_CONTROLLER_SDRAM_DATA_WIDTH 16
#define SDRAM_CONTROLLER_SDRAM_NUM_BANKS 4
#define SDRAM_CONTROLLER_SDRAM_NUM_CHIPSELECTS 1
#define SDRAM_CONTROLLER_SDRAM_ROW_WIDTH 13
#define SDRAM_CONTROLLER_SHARED_DATA 0
#define SDRAM_CONTROLLER_SIM_MODEL_BASE 0
#define SDRAM_CONTROLLER_STARVATION_INDICATOR 0
#define SDRAM_CONTROLLER_TRISTATE_BRIDGE_SLAVE ""
#define SDRAM_CONTROLLER_T_AC 5.4
#define SDRAM_CONTROLLER_T_MRD 3
#define SDRAM_CONTROLLER_T_RCD 15.0
#define SDRAM_CONTROLLER_T_RFC 70.0
#define SDRAM_CONTROLLER_T_RP 15.0
#define SDRAM_CONTROLLER_T_WR 14.0
#define SDRAM_CONTROLLER_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define SDRAM_CONTROLLER_MEMORY_INFO_GENERATE_DAT_SYM 1
#define SDRAM_CONTROLLER_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'Image_Processing_0', class 'Image_Processing'
 * The macros are prefixed with 'IMAGE_PROCESSING'.
 * The prefix is the slave descriptor.
 */
#define IMAGE_PROCESSING_COMPONENT_TYPE Image_Transformation_Component
#define IMAGE_PROCESSING_COMPONENT_TYPE_COMPONENT_NAME Image_Transformation_Component_0
#define IMAGE_PROCESSING_BASE 0x0
#define IMAGE_PROCESSING_SPAN 1024
#define IMAGE_PROCESSING_END 0x3ff


/*
 * Macros for device 'Izbor_Prikaza_Slike_0', class 'Izbor_Prikaza_Slike'
 * The macros are prefixed with 'IZBOR_PRIKAZA_SLIKE'.
 * The prefix is the slave descriptor.
 */
#define IZBOR_PRIKAZA_SLIKE_COMPONENT_TYPE Image_Transformation_Component
#define IZBOR_PRIKAZA_SLIKE_COMPONENT_TYPE_COMPONENT_NAME Image_Transformation_Component_0
#define IZBOR_PRIKAZA_SLIKE_BASE 0x400
#define IZBOR_PRIKAZA_SLIKE_SPAN 1024
#define IZBOR_PRIKAZA_SLIKE_END 0x7ff


/*
 * Macros for device 'led_indication', class 'altera_avalon_pio'
 * The macros are prefixed with 'LED_INDICATION_'.
 * The prefix is the slave descriptor.
 */
#define LED_INDICATION_COMPONENT_TYPE altera_avalon_pio
#define LED_INDICATION_COMPONENT_NAME led_indication
#define LED_INDICATION_BASE 0x410
#define LED_INDICATION_SPAN 16
#define LED_INDICATION_END 0x41f
#define LED_INDICATION_BIT_CLEARING_EDGE_REGISTER 0
#define LED_INDICATION_BIT_MODIFYING_OUTPUT_REGISTER 0
#define LED_INDICATION_CAPTURE 0
#define LED_INDICATION_DATA_WIDTH 10
#define LED_INDICATION_DO_TEST_BENCH_WIRING 0
#define LED_INDICATION_DRIVEN_SIM_VALUE 0
#define LED_INDICATION_EDGE_TYPE NONE
#define LED_INDICATION_FREQ 100000000
#define LED_INDICATION_HAS_IN 0
#define LED_INDICATION_HAS_OUT 1
#define LED_INDICATION_HAS_TRI 0
#define LED_INDICATION_IRQ_TYPE NONE
#define LED_INDICATION_RESET_VALUE 0

/*
 * Macros for device 'vide_dma_controller', class 'altera_up_avalon_video_dma_controller'
 * The macros are prefixed with 'VIDE_DMA_CONTROLLER_'.
 * The prefix is the slave descriptor.
 */
#define VIDE_DMA_CONTROLLER_COMPONENT_TYPE altera_up_avalon_video_dma_controller
#define VIDE_DMA_CONTROLLER_COMPONENT_NAME vide_dma_controller
#define VIDE_DMA_CONTROLLER_BASE 0x830
#define VIDE_DMA_CONTROLLER_SPAN 16
#define VIDE_DMA_CONTROLLER_END 0x83f


/*
 * Macros for device 'vide_dma_controller_CITANJE', class 'altera_up_avalon_video_dma_controller'
 * The macros are prefixed with 'VIDE_DMA_CONTROLLER_'.
 * The prefix is the slave descriptor.
 */
#define VIDE_DMA_CONTROLLER_CITANJE_COMPONENT_TYPE altera_up_avalon_video_dma_controller
#define VIDE_DMA_CONTROLLER_COMPONENT_CITANJE_NAME vide_dma_controller_CITANJE
#define VIDE_DMA_CONTROLLER_CITANJE_BASE 0x820
#define VIDE_DMA_CONTROLLER_CITANJE_SPAN 16
#define VIDE_DMA_CONTROLLER_CITANJE_END 0x81f

/*
 * Macros for device 'vide_dma_controller_CITANJE_0', class 'altera_up_avalon_video_dma_controller'
 * The macros are prefixed with 'VIDE_DMA_CONTROLLER_0'.
 * The prefix is the slave descriptor.
 */
#define VIDE_DMA_CONTROLLER_CITANJE_0_COMPONENT_TYPE altera_up_avalon_video_dma_controller
#define VIDE_DMA_CONTROLLER_COMPONENT_CITANJE_0_NAME vide_dma_controller_CITANJE_0
#define VIDE_DMA_CONTROLLER_CITANJE_0_BASE 0x800
#define VIDE_DMA_CONTROLLER_CITANJE_0_SPAN 16
#define VIDE_DMA_CONTROLLER_CITANJE_0_END 0x80f

/*
 * Macros for device 'dma_controller_UPIS', class 'altera_up_avalon_video_dma_controller'
 * The macros are prefixed with 'DMA_CONTROLLER_UPIS'.
 * The prefix is the slave descriptor.
 */
#define DMA_CONTROLLER_UPIS_COMPONENT_TYPE altera_up_avalon_video_dma_controller
#define DMA_CONTROLLER_COMPONENT_CITANJE_0_NAME DMA_CONTROLLER_UPIS
#define DMA_CONTROLLER_UPIS_BASE 0x810
#define DMA_CONTROLLER_UPIS_SPAN 16
#define DMA_CONTROLLER_UPIS_END 0x81f

/*
 * Macros for device 'histogram_memory', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'HISTOGRAM_MEMORY_'.
 * The prefix is the slave descriptor.
 */
#define HISTOGRAM_MEMORY_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HISTOGRAM_MEMORY_COMPONENT_NAME histogram_memory
#define HISTOGRAM_MEMORY_BASE 0x4000000
#define HISTOGRAM_MEMORY_SPAN 4096
#define HISTOGRAM_MEMORY_END 0x4000fff
#define HISTOGRAM_MEMORY_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HISTOGRAM_MEMORY_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HISTOGRAM_MEMORY_CONTENTS_INFO ""
#define HISTOGRAM_MEMORY_DUAL_PORT 1
#define HISTOGRAM_MEMORY_GUI_RAM_BLOCK_TYPE AUTO
#define HISTOGRAM_MEMORY_INIT_CONTENTS_FILE VideoBox_histogram_memory
#define HISTOGRAM_MEMORY_INIT_MEM_CONTENT 1
#define HISTOGRAM_MEMORY_INSTANCE_ID NONE
#define HISTOGRAM_MEMORY_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HISTOGRAM_MEMORY_RAM_BLOCK_TYPE AUTO
#define HISTOGRAM_MEMORY_READ_DURING_WRITE_MODE DONT_CARE
#define HISTOGRAM_MEMORY_SINGLE_CLOCK_OP 0
#define HISTOGRAM_MEMORY_SIZE_MULTIPLE 1
#define HISTOGRAM_MEMORY_SIZE_VALUE 4096
#define HISTOGRAM_MEMORY_WRITABLE 1
#define HISTOGRAM_MEMORY_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HISTOGRAM_MEMORY_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HISTOGRAM_MEMORY_MEMORY_INFO_GENERATE_HEX 1
#define HISTOGRAM_MEMORY_MEMORY_INFO_HAS_BYTE_LANE 0
#define HISTOGRAM_MEMORY_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HISTOGRAM_MEMORY_MEMORY_INFO_MEM_INIT_DATA_WIDTH 32
#define HISTOGRAM_MEMORY_MEMORY_INFO_MEM_INIT_FILENAME VideoBox_histogram_memory

/*
 * Macros for device 'affine_matrix', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'AFFINE_MATRIX_'.
 * The prefix is the slave descriptor.
 */
#define AFFINE_MATRIX_COMPONENT_TYPE altera_avalon_onchip_memory2
#define AFFINE_MATRIX_COMPONENT_NAME affine_matrix
#define AFFINE_MATRIX_BASE 0x4000000
#define AFFINE_MATRIX_SPAN 4096
#define AFFINE_MATRIX_END 0x4000fff
#define AFFINE_MATRIX_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define AFFINE_MATRIX_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define AFFINE_MATRIX_CONTENTS_INFO ""
#define AFFINE_MATRIX_DUAL_PORT 1
#define AFFINE_MATRIX_GUI_RAM_BLOCK_TYPE AUTO
#define AFFINE_MATRIX_INIT_CONTENTS_FILE VideoBox_affine_matrix
#define AFFINE_MATRIX_INIT_MEM_CONTENT 1
#define AFFINE_MATRIX_INSTANCE_ID NONE
#define AFFINE_MATRIX_NON_DEFAULT_INIT_FILE_ENABLED 0
#define AFFINE_MATRIX_RAM_BLOCK_TYPE AUTO
#define AFFINE_MATRIX_READ_DURING_WRITE_MODE DONT_CARE
#define AFFINE_MATRIX_SINGLE_CLOCK_OP 0
#define AFFINE_MATRIX_SIZE_MULTIPLE 1
#define AFFINE_MATRIX_SIZE_VALUE 4096
#define AFFINE_MATRIX_WRITABLE 1
#define AFFINE_MATRIX_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define AFFINE_MATRIX_MEMORY_INFO_GENERATE_DAT_SYM 1
#define AFFINE_MATRIX_MEMORY_INFO_GENERATE_HEX 1
#define AFFINE_MATRIX_MEMORY_INFO_HAS_BYTE_LANE 0
#define AFFINE_MATRIX_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define AFFINE_MATRIX_MEMORY_INFO_MEM_INIT_DATA_WIDTH 32
#define AFFINE_MATRIX_MEMORY_INFO_MEM_INIT_FILENAME VideoBox_affine_matrix


#endif /* _ALTERA_ADDRESS_BASES_H_ */
